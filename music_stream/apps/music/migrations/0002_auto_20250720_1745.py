# Generated by Django 3.1.12 on 2025-07-20 14:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('music', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlbumArtist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AlbumGenres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PlaylistGenres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TrackGenres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TrackInAlbum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.SmallIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='TrackInPlaylist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TrackMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.PositiveSmallIntegerField()),
                ('bitrate', models.PositiveSmallIntegerField()),
                ('file_size', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserArtist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.RemoveField(
            model_name='album',
            name='genre',
        ),
        migrations.RemoveField(
            model_name='artist',
            name='user',
        ),
        migrations.RemoveField(
            model_name='track',
            name='genre',
        ),
        migrations.AddField(
            model_name='playlist',
            name='owner',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='auth.user', verbose_name='Владелец'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='track',
            name='artist',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='music.artist'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='album',
            name='cover',
            field=models.ImageField(upload_to='music_covers/', verbose_name='Обложка'),
        ),
        migrations.AlterField(
            model_name='album',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='album',
            name='is_explicit',
            field=models.BooleanField(default=False, verbose_name='Возрастное ограничение 18+'),
        ),
        migrations.AlterField(
            model_name='album',
            name='release_date',
            field=models.DateTimeField(null=True, verbose_name='Дата релиза'),
        ),
        migrations.AlterField(
            model_name='album',
            name='status',
            field=models.CharField(choices=[('active', 'Активен'), ('in_pending', 'На рассмотрении'), ('Rejected', 'Отклонен')], default='in_pending', max_length=15, verbose_name='Статус'),
        ),
        migrations.AlterField(
            model_name='album',
            name='title',
            field=models.CharField(max_length=128, unique=True, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='album',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AlterField(
            model_name='artist',
            name='balance',
            field=models.IntegerField(default=0, verbose_name='Баланс'),
        ),
        migrations.AlterField(
            model_name='artist',
            name='bio',
            field=models.TextField(blank=True, default='', verbose_name='Биография'),
        ),
        migrations.AlterField(
            model_name='artist',
            name='image',
            field=models.ImageField(upload_to='artists_images/', verbose_name='Фото'),
        ),
        migrations.AlterField(
            model_name='artist',
            name='name',
            field=models.CharField(max_length=128, unique=True, verbose_name='Имя'),
        ),
        migrations.AlterField(
            model_name='artist',
            name='status',
            field=models.CharField(choices=[('active', 'Активен'), ('in_pending', 'На рассмотрении'), ('Rejected', 'Отклонен')], default='in_pending', max_length=15, verbose_name='Статус'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='cover',
            field=models.ImageField(upload_to='playlists_covers/', verbose_name='Обложка'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='is_explicit',
            field=models.BooleanField(default=False, verbose_name='Возрастное ограничение 18+'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AlterField(
            model_name='track',
            name='cover',
            field=models.ImageField(upload_to='music_covers/', verbose_name='Обложка'),
        ),
        migrations.AlterField(
            model_name='track',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='track',
            name='is_explicit',
            field=models.BooleanField(default=False, verbose_name='Возрастное ограничение 18+'),
        ),
        migrations.AlterField(
            model_name='track',
            name='release_date',
            field=models.DateTimeField(null=True, verbose_name='Дата релиза'),
        ),
        migrations.AlterField(
            model_name='track',
            name='status',
            field=models.CharField(choices=[('active', 'Активен'), ('in_pending', 'На рассмотрении'), ('Rejected', 'Отклонен')], default='in_pending', max_length=15, verbose_name='Статус'),
        ),
        migrations.AlterField(
            model_name='track',
            name='title',
            field=models.CharField(max_length=128, unique=True, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='track',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AlterUniqueTogether(
            name='playlist',
            unique_together={('owner', 'title')},
        ),
        migrations.AddIndex(
            model_name='album',
            index=models.Index(fields=['title'], name='idx_album_title'),
        ),
        migrations.AddIndex(
            model_name='album',
            index=models.Index(fields=['slug'], name='idx_album_slug'),
        ),
        migrations.AddIndex(
            model_name='artist',
            index=models.Index(fields=['name'], name='idx_artist_name'),
        ),
        migrations.AddIndex(
            model_name='artist',
            index=models.Index(fields=['slug'], name='idx_artist_slug'),
        ),
        migrations.AddIndex(
            model_name='artist',
            index=models.Index(fields=['status'], name='idx_artist_status'),
        ),
        migrations.AddIndex(
            model_name='genre',
            index=models.Index(fields=['title'], name='idx_genre_title'),
        ),
        migrations.AddIndex(
            model_name='genre',
            index=models.Index(fields=['slug'], name='idx_genre_slug'),
        ),
        migrations.AddIndex(
            model_name='playlist',
            index=models.Index(fields=['title'], name='idx_playlist_title'),
        ),
        migrations.AddIndex(
            model_name='playlist',
            index=models.Index(fields=['slug'], name='idx_playlist_slug'),
        ),
        migrations.AddIndex(
            model_name='track',
            index=models.Index(fields=['title'], name='idx_track_title'),
        ),
        migrations.AddIndex(
            model_name='track',
            index=models.Index(fields=['slug'], name='idx_track_slug'),
        ),
        migrations.AddIndex(
            model_name='track',
            index=models.Index(fields=['artist'], name='idx_track_artist'),
        ),
        migrations.AddField(
            model_name='userartist',
            name='artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.artist'),
        ),
        migrations.AddField(
            model_name='userartist',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='trackmetadata',
            name='track',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='music.track'),
        ),
        migrations.AddField(
            model_name='trackinplaylist',
            name='playlist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.playlist'),
        ),
        migrations.AddField(
            model_name='trackinplaylist',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.track'),
        ),
        migrations.AddField(
            model_name='trackinalbum',
            name='album',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.album'),
        ),
        migrations.AddField(
            model_name='trackinalbum',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.track'),
        ),
        migrations.AddField(
            model_name='trackgenres',
            name='genre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='music.genre'),
        ),
        migrations.AddField(
            model_name='trackgenres',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.track'),
        ),
        migrations.AddField(
            model_name='playlistgenres',
            name='genre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.genre'),
        ),
        migrations.AddField(
            model_name='playlistgenres',
            name='playlist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.playlist'),
        ),
        migrations.AddField(
            model_name='albumgenres',
            name='album',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.album'),
        ),
        migrations.AddField(
            model_name='albumgenres',
            name='genre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.genre'),
        ),
        migrations.AddField(
            model_name='albumartist',
            name='album',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.album'),
        ),
        migrations.AddField(
            model_name='albumartist',
            name='artist',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='music.artist'),
        ),
        migrations.RemoveField(
            model_name='playlist',
            name='genre',
        ),
        migrations.AlterUniqueTogether(
            name='userartist',
            unique_together={('artist', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='trackinplaylist',
            unique_together={('track', 'playlist')},
        ),
        migrations.AlterUniqueTogether(
            name='trackinalbum',
            unique_together={('track', 'album')},
        ),
        migrations.AlterUniqueTogether(
            name='trackgenres',
            unique_together={('track', 'genre')},
        ),
        migrations.AlterUniqueTogether(
            name='playlistgenres',
            unique_together={('playlist', 'genre')},
        ),
        migrations.AlterUniqueTogether(
            name='albumgenres',
            unique_together={('genre', 'album')},
        ),
        migrations.AlterUniqueTogether(
            name='albumartist',
            unique_together={('artist', 'album')},
        ),
    ]
